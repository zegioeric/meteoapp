{"ast":null,"code":"var _jsxFileName = \"/home/eric/projects/react/meteoapp/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Forecasts from '../components/Forecasts';\nimport { getWeather } from '../api/openweather';\nimport Weather from '../components/Weather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const [weather, setWeather] = useState({});\n  const [message, setMessage] = useState('Carico..');\n\n  const fetchDataWeather = async data => {\n    console.log(data);\n    const resWeather = await getWeather(data);\n    setWeather(resWeather);\n  };\n\n  useEffect(() => {\n    var id, target, options;\n\n    function success(pos) {\n      var crd = pos.coords;\n\n      if (target.latitude === crd.latitude && target.longitude === crd.longitude) {\n        console.log('Congratulazioni, hai raggiunto il target');\n        navigator.geolocation.clearWatch(id);\n      }\n    }\n\n    function error(err) {\n      console.warn('ERROR(' + err.code + '): ' + err.message);\n    }\n\n    target = {\n      latitude: 0,\n      longitude: 0\n    };\n    options = {\n      enableHighAccuracy: false,\n      timeout: 5000,\n      maximumAge: 0\n    };\n    id = navigator.geolocation.watchPosition(success, error, options); // if (navigator.geolocation){\n    //   navigator.geolocation.watchPosition(function(position){\n    //     fetchDataWeather({\n    //       lat: position.coords.latitude,\n    //       long: position.coords.longitude,\n    //     })\n    //   }, function(err) {\n    //     setMessage((err.code == 1) ? 'Attiva la posizione del browser' : err.message)\n    //   });\n    // }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [Object.keys(weather).length > 0 ? /*#__PURE__*/_jsxDEV(Weather, {\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Forecasts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"U+5TbCyex4u9ZdeVcuNFI4T/7IU=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/eric/projects/react/meteoapp/src/pages/HomePage.js"],"names":["React","useEffect","useState","Forecasts","getWeather","Weather","HomePage","weather","setWeather","message","setMessage","fetchDataWeather","data","console","log","resWeather","id","target","options","success","pos","crd","coords","latitude","longitude","navigator","geolocation","clearWatch","error","err","warn","code","enableHighAccuracy","timeout","maximumAge","watchPosition","Object","keys","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,UAAD,CAAtC;;AAEA,QAAMS,gBAAgB,GAAG,MAAOC,IAAP,IAAgB;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAMG,UAAU,GAAG,MAAMX,UAAU,CAACQ,IAAD,CAAnC;AACAJ,IAAAA,UAAU,CAACO,UAAD,CAAV;AACD,GAJD;;AAMAd,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAIe,EAAJ,EAAQC,MAAR,EAAgBC,OAAhB;;AAEA,aAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,UAAIC,GAAG,GAAGD,GAAG,CAACE,MAAd;;AAEA,UAAIL,MAAM,CAACM,QAAP,KAAoBF,GAAG,CAACE,QAAxB,IAAoCN,MAAM,CAACO,SAAP,KAAqBH,GAAG,CAACG,SAAjE,EAA4E;AAC1EX,QAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACAW,QAAAA,SAAS,CAACC,WAAV,CAAsBC,UAAtB,CAAiCX,EAAjC;AACD;AACF;;AAED,aAASY,KAAT,CAAeC,GAAf,EAAoB;AAClBhB,MAAAA,OAAO,CAACiB,IAAR,CAAa,WAAWD,GAAG,CAACE,IAAf,GAAsB,KAAtB,GAA8BF,GAAG,CAACpB,OAA/C;AACD;;AAEDQ,IAAAA,MAAM,GAAG;AACPM,MAAAA,QAAQ,EAAG,CADJ;AAEPC,MAAAA,SAAS,EAAE;AAFJ,KAAT;AAKAN,IAAAA,OAAO,GAAG;AACRc,MAAAA,kBAAkB,EAAE,KADZ;AAERC,MAAAA,OAAO,EAAE,IAFD;AAGRC,MAAAA,UAAU,EAAE;AAHJ,KAAV;AAMAlB,IAAAA,EAAE,GAAGS,SAAS,CAACC,WAAV,CAAsBS,aAAtB,CAAoChB,OAApC,EAA6CS,KAA7C,EAAoDV,OAApD,CAAL,CA3BY,CA4BZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAtCQ,EAsCP,EAtCO,CAAT;AAyCA,sBACE;AAAA,eACIkB,MAAM,CAACC,IAAP,CAAY9B,OAAZ,EAAqB+B,MAArB,GAA8B,CAA/B,gBACC,QAAC,OAAD;AAAS,MAAA,OAAO,EAAE/B;AAAlB;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,gBAA2BE;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJJ,eAME,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA7DD;;GAAMH,Q;;KAAAA,Q;AA8DN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Forecasts from '../components/Forecasts'\nimport { getWeather } from '../api/openweather'\nimport Weather from '../components/Weather';\n\nconst HomePage = () => {\n  const [weather, setWeather] = useState({})\n  const [message, setMessage] = useState('Carico..')\n\n  const fetchDataWeather = async (data) => {\n    console.log(data)\n    const resWeather = await getWeather(data)\n    setWeather(resWeather)\n  }\n\n  useEffect(()=>{\n    var id, target, options;\n\n    function success(pos) {\n      var crd = pos.coords;\n\n      if (target.latitude === crd.latitude && target.longitude === crd.longitude) {\n        console.log('Congratulazioni, hai raggiunto il target');\n        navigator.geolocation.clearWatch(id);\n      }\n    }\n\n    function error(err) {\n      console.warn('ERROR(' + err.code + '): ' + err.message);\n    }\n\n    target = {\n      latitude : 0,\n      longitude: 0\n    };\n\n    options = {\n      enableHighAccuracy: false,\n      timeout: 5000,\n      maximumAge: 0\n    };\n\n    id = navigator.geolocation.watchPosition(success, error, options);\n    // if (navigator.geolocation){\n    //   navigator.geolocation.watchPosition(function(position){\n    //     fetchDataWeather({\n    //       lat: position.coords.latitude,\n    //       long: position.coords.longitude,\n    //     })\n    //   }, function(err) {\n    //     setMessage((err.code == 1) ? 'Attiva la posizione del browser' : err.message)\n    //   });\n    // }\n  },[])\n\n\n  return (\n    <div>\n      {(Object.keys(weather).length > 0) ?\n        <Weather weather={weather} />\n        :\n        <span className='message'>{message}</span>\n      }\n      <Forecasts />\n    </div>\n  )\n}\nexport default HomePage\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}