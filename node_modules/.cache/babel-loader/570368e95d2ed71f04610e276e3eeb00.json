{"ast":null,"code":"var _jsxFileName = \"/home/eric/projects/react/meteoapp/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Forecasts from '../components/Forecasts';\nimport { getWeather } from '../api/openweather';\nimport Weather from '../components/Weather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const [weather, setWeather] = useState({});\n\n  const fetchDataWeather = async data => {\n    const resWeather = await getWeather(data);\n    setWeather(resWeather);\n  };\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(function (position) {\n        fetchDataWeather({\n          lat: position.coords.latitude,\n          long: position.coords.longitude\n        });\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [Object.keys(weather).length > 0 ? /*#__PURE__*/_jsxDEV(Weather, {\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Forecasts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"p44c62psaVm/fTquZwTezXTodIU=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/eric/projects/react/meteoapp/src/pages/HomePage.js"],"names":["React","useEffect","useState","Forecasts","getWeather","Weather","HomePage","weather","setWeather","fetchDataWeather","data","resWeather","navigator","geolocation","watchPosition","position","lat","coords","latitude","long","longitude","Object","keys","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMO,gBAAgB,GAAG,MAAOC,IAAP,IAAgB;AACvC,UAAMC,UAAU,GAAG,MAAMP,UAAU,CAACM,IAAD,CAAnC;AACAF,IAAAA,UAAU,CAACG,UAAD,CAAV;AACD,GAHD;;AAKAV,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAIW,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,aAAtB,CAAoC,UAASC,QAAT,EAAmB;AACrDN,QAAAA,gBAAgB,CAAC;AACfO,UAAAA,GAAG,EAAED,QAAQ,CAACE,MAAT,CAAgBC,QADN;AAEfC,UAAAA,IAAI,EAAEJ,QAAQ,CAACE,MAAT,CAAgBG;AAFP,SAAD,CAAhB;AAID,OALD;AAMD;AACF,GATQ,EASP,EATO,CAAT;AAYA,sBACE;AAAA,eACIC,MAAM,CAACC,IAAP,CAAYf,OAAZ,EAAqBgB,MAArB,GAA8B,CAA/B,gBACC,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEhB;AAAlB;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAME,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA9BD;;GAAMD,Q;;KAAAA,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Forecasts from '../components/Forecasts'\nimport { getWeather } from '../api/openweather'\nimport Weather from '../components/Weather';\n\nconst HomePage = () => {\n  const [weather, setWeather] = useState({})\n\n  const fetchDataWeather = async (data) => {\n    const resWeather = await getWeather(data)\n    setWeather(resWeather)\n  }\n\n  useEffect(()=>{\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(function(position) {\n        fetchDataWeather({\n          lat: position.coords.latitude,\n          long: position.coords.longitude\n        })\n      });\n    }\n  },[])\n\n\n  return (\n    <div>\n      {(Object.keys(weather).length > 0) ?\n        <Weather weather={weather} />\n        :\n        <p>loading</p>\n      }\n      <Forecasts />\n    </div>\n  )\n}\nexport default HomePage\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}