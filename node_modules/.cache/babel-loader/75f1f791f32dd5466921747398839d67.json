{"ast":null,"code":"var _jsxFileName = \"/home/eric/projects/react/meteoapp/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Forecasts from '../components/Forecasts';\nimport { getWeather } from '../api/openweather';\nimport Weather from '../components/Weather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const [weather, setWeather] = useState({});\n  const [message, setMessage] = useState('Carico..');\n\n  const fetchDataWeather = async data => {\n    const resWeather = await getWeather(data);\n    setWeather(resWeather);\n  };\n\n  useEffect(() => {\n    if (navigator['Geolocation']) {\n      navigator.geolocation.watchPosition(function (position) {\n        if (position) {\n          fetchDataWeather({\n            lat: position.coords.latitude,\n            long: position.coords.longitude\n          });\n        }\n      });\n    } else {\n      setMessage('Attiva la tua posizione');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-weather\",\n      children: Object.keys(weather).length > 0 ? /*#__PURE__*/_jsxDEV(Weather, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Forecasts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"U+5TbCyex4u9ZdeVcuNFI4T/7IU=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/eric/projects/react/meteoapp/src/pages/HomePage.js"],"names":["React","useEffect","useState","Forecasts","getWeather","Weather","HomePage","weather","setWeather","message","setMessage","fetchDataWeather","data","resWeather","navigator","geolocation","watchPosition","position","lat","coords","latitude","long","longitude","Object","keys","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,UAAD,CAAtC;;AAEA,QAAMS,gBAAgB,GAAG,MAAOC,IAAP,IAAgB;AACvC,UAAMC,UAAU,GAAG,MAAMT,UAAU,CAACQ,IAAD,CAAnC;AACAJ,IAAAA,UAAU,CAACK,UAAD,CAAV;AACD,GAHD;;AAKAZ,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAIa,SAAS,CAAC,aAAD,CAAb,EAA6B;AAC3BA,MAAAA,SAAS,CAACC,WAAV,CAAsBC,aAAtB,CAAoC,UAASC,QAAT,EAAmB;AACrD,YAAGA,QAAH,EAAa;AACXN,UAAAA,gBAAgB,CAAC;AACfO,YAAAA,GAAG,EAAED,QAAQ,CAACE,MAAT,CAAgBC,QADN;AAEfC,YAAAA,IAAI,EAAEJ,QAAQ,CAACE,MAAT,CAAgBG;AAFP,WAAD,CAAhB;AAID;AACF,OAPD;AAQD,KATD,MASO;AACLZ,MAAAA,UAAU,CAAC,yBAAD,CAAV;AACD;AACF,GAbQ,EAaP,EAbO,CAAT;AAgBA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACIa,MAAM,CAACC,IAAP,CAAYjB,OAAZ,EAAqBkB,MAArB,GAA8B,CAA/B,gBACC,QAAC,OAAD;AAAS,QAAA,OAAO,EAAElB;AAAlB;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAA,kBAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CArCD;;GAAMH,Q;;KAAAA,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Forecasts from '../components/Forecasts'\nimport { getWeather } from '../api/openweather'\nimport Weather from '../components/Weather';\n\nconst HomePage = () => {\n  const [weather, setWeather] = useState({})\n  const [message, setMessage] = useState('Carico..')\n\n  const fetchDataWeather = async (data) => {\n    const resWeather = await getWeather(data)\n    setWeather(resWeather)\n  }\n\n  useEffect(()=>{\n    if (navigator['Geolocation']){\n      navigator.geolocation.watchPosition(function(position) {\n        if(position) {\n          fetchDataWeather({\n            lat: position.coords.latitude,\n            long: position.coords.longitude,\n          })\n        } \n      });\n    } else {\n      setMessage('Attiva la tua posizione')\n    }\n  },[])\n\n\n  return (\n    <div>\n      <div className='container-weather' >\n        {(Object.keys(weather).length > 0) ?\n          <Weather weather={weather} />\n          :\n          <p>{message}</p>\n        }\n      </div>\n      <Forecasts />\n    </div>\n  )\n}\nexport default HomePage\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}