{"ast":null,"code":"var _jsxFileName = \"/home/eric/projects/react/meteoapp/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport AnimationText from '../components/AnimationText';\nimport Forecasts from '../components/Forecasts';\nimport { getWeather } from '../api/openweather';\nimport WeatherIcon from 'react-icons-weather';\nimport { usePosition } from 'use-position';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const {\n    latitude,\n    longitude,\n    error\n  } = usePosition();\n  const [weather, setWeather] = useState({});\n\n  const fetchDataWeather = async data => {\n    const resWeather = await getWeather(data);\n    setWeather(resWeather);\n  }; //ATTENZIONE\n\n\n  if (latitude && longitude && Object.keys(weather).length === 0) {\n    fetchDataWeather({\n      lat: latitude,\n      long: longitude\n    });\n  }\n\n  const WeatherComponent = () => {\n    return weather ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: weather.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherIcon, {\n        name: \"owm\",\n        iconId: \"200\",\n        flip: \"horizontal\",\n        rotate: \"90\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(WeatherComponent, {\n      className: \"container-weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"WlufRUvZAz2b2A8Vn7ckcDn7aRM=\", false, function () {\n  return [usePosition];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/eric/projects/react/meteoapp/src/pages/HomePage.js"],"names":["React","useEffect","useState","AnimationText","Forecasts","getWeather","WeatherIcon","usePosition","HomePage","latitude","longitude","error","weather","setWeather","fetchDataWeather","data","resWeather","Object","keys","length","lat","long","WeatherComponent","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,WAAT,QAA4B,cAA5B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,MAA+BJ,WAAW,EAAhD;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMY,gBAAgB,GAAG,MAAOC,IAAP,IAAgB;AACvC,UAAMC,UAAU,GAAG,MAAMX,UAAU,CAACU,IAAD,CAAnC;AACAF,IAAAA,UAAU,CAACG,UAAD,CAAV;AACD,GAHD,CAJqB,CASrB;;;AACA,MAAGP,QAAQ,IAAIC,SAAZ,IAAyBO,MAAM,CAACC,IAAP,CAAYN,OAAZ,EAAqBO,MAArB,KAAgC,CAA5D,EAA8D;AAC5DL,IAAAA,gBAAgB,CAAC;AACfM,MAAAA,GAAG,EAAEX,QADU;AAEfY,MAAAA,IAAI,EAAEX;AAFS,KAAD,CAAhB;AAID;;AAED,QAAMY,gBAAgB,GAAG,MAAM;AAC7B,WAAQV,OAAD,gBACL;AAAA,8BACE;AAAA,kBAAKA,OAAO,CAACW;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAC,KAAlB;AAAwB,QAAA,MAAM,EAAC,KAA/B;AAAqC,QAAA,IAAI,EAAC,YAA1C;AAAuD,QAAA,MAAM,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,gBAOL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAQD,GATD;;AAWA,sBACE;AAAA,2BACE,QAAC,gBAAD;AAAkB,MAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAnCD;;GAAMf,Q;UACiCD,W;;;KADjCC,Q;AAoCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport AnimationText from '../components/AnimationText'\nimport Forecasts from '../components/Forecasts'\nimport { getWeather } from '../api/openweather'\nimport WeatherIcon from 'react-icons-weather';\nimport { usePosition } from 'use-position'\n\nconst HomePage = () => {\n  const {latitude, longitude, error} = usePosition();\n  const [weather, setWeather] = useState({})\n\n  const fetchDataWeather = async (data) => {\n    const resWeather = await getWeather(data)\n    setWeather(resWeather)\n  }\n\n  //ATTENZIONE\n  if(latitude && longitude && Object.keys(weather).length === 0){\n    fetchDataWeather({\n      lat: latitude,\n      long: longitude\n    })\n  }\n\n  const WeatherComponent = () => {\n    return (weather) ?\n      <div>\n        <h1>{weather.name}</h1>\n        <WeatherIcon name=\"owm\" iconId=\"200\" flip=\"horizontal\" rotate=\"90\" />\n      </div>\n\n      : \n      <p>loading</p> \n  }\n\n  return (\n    <div>\n      <WeatherComponent className='container-weather' />\n      {/* <AnimationText text='Posizione attuale' /> */}\n      {/* <Forecasts /> */}\n    </div>\n  )\n}\nexport default HomePage\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}