{"ast":null,"code":"var _jsxFileName = \"/home/eric/projects/react/meteoapp/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Forecasts from '../components/Forecasts';\nimport { getWeather } from '../api/openweather';\nimport Weather from '../components/Weather';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const [weather, setWeather] = useState({});\n  const [forecast, setForecast] = useState({});\n  const [message, setMessage] = useState('Carico..');\n\n  const fetchDataWeather = async data => {\n    const resWeather = await getWeather(data);\n    setWeather(resWeather);\n    localStorage.setItem('lastWeatherUpdate', moment(new Date()));\n  };\n\n  const getPosition = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        const geoData = {\n          lat: position.coords.latitude,\n          long: position.coords.longitude\n        };\n        fetchDataWeather(geoData);\n        fetchDataForecast(geoData);\n      }, function (err) {\n        setWeather({});\n        setMessage(err.code == 1 ? 'Attiva la posizione del browser' : err.message);\n      }, {\n        enableHighAccuracy: true,\n        maximumAge: 30000,\n        timeout: 25000\n      });\n    }\n  };\n\n  useEffect(() => {\n    getPosition();\n    setInterval(() => {\n      getPosition();\n    }, 3600000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [Object.keys(weather).length > 0 ? /*#__PURE__*/_jsxDEV(Weather, {\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Forecasts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"Fv+F2IjLrNDRkN7yDUBJxekAN5E=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/eric/projects/react/meteoapp/src/pages/HomePage.js"],"names":["React","useEffect","useState","Forecasts","getWeather","Weather","moment","HomePage","weather","setWeather","forecast","setForecast","message","setMessage","fetchDataWeather","data","resWeather","localStorage","setItem","Date","getPosition","navigator","geolocation","getCurrentPosition","position","geoData","lat","coords","latitude","long","longitude","fetchDataForecast","err","code","enableHighAccuracy","maximumAge","timeout","setInterval","Object","keys","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,UAAD,CAAtC;;AAEA,QAAMY,gBAAgB,GAAG,MAAOC,IAAP,IAAgB;AACvC,UAAMC,UAAU,GAAG,MAAMZ,UAAU,CAACW,IAAD,CAAnC;AACAN,IAAAA,UAAU,CAACO,UAAD,CAAV;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EAA0CZ,MAAM,CAAC,IAAIa,IAAJ,EAAD,CAAhD;AACD,GAJD;;AAMA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIC,SAAS,CAACC,WAAd,EAA0B;AACxBD,MAAAA,SAAS,CAACC,WAAV,CAAuBC,kBAAvB,CAA0C,UAASC,QAAT,EAAkB;AAC1D,cAAMC,OAAO,GAAG;AACdC,UAAAA,GAAG,EAAEF,QAAQ,CAACG,MAAT,CAAgBC,QADP;AAEdC,UAAAA,IAAI,EAAEL,QAAQ,CAACG,MAAT,CAAgBG;AAFR,SAAhB;AAKAhB,QAAAA,gBAAgB,CAACW,OAAD,CAAhB;AACAM,QAAAA,iBAAiB,CAACN,OAAD,CAAjB;AAED,OATD,EASG,UAASO,GAAT,EAAc;AACfvB,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAI,QAAAA,UAAU,CAAEmB,GAAG,CAACC,IAAJ,IAAY,CAAb,GAAkB,iCAAlB,GAAsDD,GAAG,CAACpB,OAA3D,CAAV;AACD,OAZD,EAYG;AACDsB,QAAAA,kBAAkB,EAAE,IADnB;AAEDC,QAAAA,UAAU,EAAU,KAFnB;AAGDC,QAAAA,OAAO,EAAa;AAHnB,OAZH;AAiBD;AACF,GApBD;;AAsBAnC,EAAAA,SAAS,CAAC,MAAI;AACZmB,IAAAA,WAAW;AACXiB,IAAAA,WAAW,CAAC,MAAM;AAChBjB,MAAAA,WAAW;AACZ,KAFU,EAER,OAFQ,CAAX;AAGD,GALQ,EAKP,EALO,CAAT;AAOA,sBACE;AAAA,eACIkB,MAAM,CAACC,IAAP,CAAY/B,OAAZ,EAAqBgC,MAArB,GAA8B,CAA/B,gBACC,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEhC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,gBAA2BI;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJJ,eAME,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAlDD;;GAAML,Q;;KAAAA,Q;AAmDN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Forecasts from '../components/Forecasts'\nimport { getWeather } from '../api/openweather'\nimport Weather from '../components/Weather';\nimport moment from 'moment';\n\n\nconst HomePage = () => {\n  const [weather, setWeather] = useState({})\n  const [forecast, setForecast] = useState({})\n  const [message, setMessage] = useState('Carico..')\n\n  const fetchDataWeather = async (data) => {\n    const resWeather = await getWeather(data)\n    setWeather(resWeather)\n    localStorage.setItem('lastWeatherUpdate', moment(new Date()));\n  }\n\n  const getPosition = () => {\n    if (navigator.geolocation){\n      navigator.geolocation. getCurrentPosition(function(position){\n        const geoData = {\n          lat: position.coords.latitude,\n          long: position.coords.longitude,\n        }\n\n        fetchDataWeather(geoData)\n        fetchDataForecast(geoData)\n      \n      }, function(err) {\n        setWeather({})\n        setMessage((err.code == 1) ? 'Attiva la posizione del browser' : err.message)\n      }, {\n        enableHighAccuracy: true,\n        maximumAge        : 30000,\n        timeout           : 25000\n      });\n    }\n  }\n\n  useEffect(()=>{\n    getPosition()\n    setInterval(() => {\n      getPosition()\n    }, 3600000)\n  },[])\n\n  return (\n    <div>\n      {(Object.keys(weather).length > 0) ?\n        <Weather weather={weather} />\n        :\n        <span className='message'>{message}</span>\n      }\n      <Forecasts />\n    </div>\n  )\n}\nexport default HomePage\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}