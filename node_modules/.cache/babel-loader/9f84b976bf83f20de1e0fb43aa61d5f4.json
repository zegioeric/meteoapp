{"ast":null,"code":"var _jsxFileName = \"/home/eric/projects/react/meteoapp/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport AnimationText from '../components/AnimationText';\nimport Forecasts from '../components/Forecasts';\nimport GetLocation from '../components/GetLocation';\nimport { getForecast } from '../api/openweather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const {\n    latitude,\n    longitude,\n    error\n  } = GetLocation();\n  const [weather, setWeather] = useState({});\n  const [weatherPresent, setWeatherPresent] = useState(false);\n\n  const fetchDataForecast = async data => {\n    const resWeather = await getForecast(data);\n    setWeather(resWeather);\n    setWeatherPresent(true);\n    console.log(weather);\n  };\n\n  if (latitude && longitude && weatherPresent == false) {\n    fetchDataForecast({\n      lat: latitude,\n      long: longitude\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Forecasts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"/qFc0WnFxVFrWN+I6Yl42FG+8yg=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/eric/projects/react/meteoapp/src/pages/HomePage.js"],"names":["React","useEffect","useState","AnimationText","Forecasts","GetLocation","getForecast","HomePage","latitude","longitude","error","weather","setWeather","weatherPresent","setWeatherPresent","fetchDataForecast","data","resWeather","console","log","lat","long"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,WAAT,QAA4B,oBAA5B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,MAA+BL,WAAW,EAAhD;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,KAAD,CAApD;;AAEA,QAAMa,iBAAiB,GAAG,MAAOC,IAAP,IAAgB;AACxC,UAAMC,UAAU,GAAG,MAAMX,WAAW,CAACU,IAAD,CAApC;AACAJ,IAAAA,UAAU,CAACK,UAAD,CAAV;AACAH,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACD,GAND;;AAQA,MAAGH,QAAQ,IAAIC,SAAZ,IAAyBI,cAAc,IAAI,KAA9C,EAAoD;AAClDE,IAAAA,iBAAiB,CAAC;AAChBK,MAAAA,GAAG,EAAEZ,QADW;AAEhBa,MAAAA,IAAI,EAAEZ;AAFU,KAAD,CAAjB;AAID;;AAED,sBACE;AAAA,2BAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA3BD;;GAAMF,Q;;KAAAA,Q;AA4BN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport AnimationText from '../components/AnimationText'\nimport Forecasts from '../components/Forecasts'\nimport GetLocation from '../components/GetLocation'\nimport { getForecast } from '../api/openweather'\n\nconst HomePage = () => {\n  const {latitude, longitude, error} = GetLocation();\n  const [weather, setWeather] = useState({})\n  const [weatherPresent, setWeatherPresent] = useState(false)\n\n  const fetchDataForecast = async (data) => {\n    const resWeather = await getForecast(data)\n    setWeather(resWeather)\n    setWeatherPresent(true)\n\n    console.log(weather)\n  }\n\n  if(latitude && longitude && weatherPresent == false){\n    fetchDataForecast({\n      lat: latitude,\n      long: longitude\n    })\n  }\n\n  return (\n    <div>\n      \n      {/* <AnimationText text='Posizione attuale' /> */}\n      <Forecasts />\n    </div>\n  )\n}\nexport default HomePage\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}