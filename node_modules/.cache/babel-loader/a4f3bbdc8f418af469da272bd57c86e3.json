{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { usePosition } from 'use-position';\nconst endpoint = '//api.openweathermap.org/data/2.5/weather';\nconst API_KEY = 'bd84d98d30841d5669d443eac854e864';\nexport const getForecast = async data => {\n  _s();\n\n  const {\n    latitude,\n    longitude,\n    error\n  } = usePosition(true);\n  const params = {\n    appid: API_KEY,\n    lang: 'it',\n    units: 'metric',\n    lat: data.latitude,\n    lon: data.longitude\n  };\n  console.log(latitude); // return await axios.get(endpoint, { params }).then(res => {\n  //   return res.data\n  // })\n};\n\n_s(getForecast, \"qNFiAGISyxDqhGfXeI2j8PNriUc=\", false, function () {\n  return [usePosition];\n});","map":{"version":3,"sources":["/home/eric/projects/react/meteoapp/src/api/openweather.js"],"names":["axios","usePosition","endpoint","API_KEY","getForecast","data","latitude","longitude","error","params","appid","lang","units","lat","lon","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,MAAMC,QAAQ,GAAG,2CAAjB;AACA,MAAMC,OAAO,GAAG,kCAAhB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAOC,IAAP,IAAgB;AAAA;;AAEzC,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,MAA+BP,WAAW,CAAC,IAAD,CAAhD;AAEA,QAAMQ,MAAM,GAAG;AACbC,IAAAA,KAAK,EAAEP,OADM;AAEbQ,IAAAA,IAAI,EAAE,IAFO;AAGbC,IAAAA,KAAK,EAAE,QAHM;AAIbC,IAAAA,GAAG,EAAER,IAAI,CAACC,QAJG;AAKbQ,IAAAA,GAAG,EAAET,IAAI,CAACE;AALG,GAAf;AAQAQ,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ,EAZyC,CAczC;AACA;AACA;AACD,CAjBM;;GAAMF,W;UAE0BH,W","sourcesContent":["import axios from 'axios'\nimport { usePosition } from 'use-position';\n\nconst endpoint = '//api.openweathermap.org/data/2.5/weather';\nconst API_KEY = 'bd84d98d30841d5669d443eac854e864'\n\nexport const getForecast = async (data) => {\n\n  const {latitude, longitude, error} = usePosition(true);\n\n  const params = {\n    appid: API_KEY,\n    lang: 'it',\n    units: 'metric',\n    lat: data.latitude,\n    lon: data.longitude\n  };\n\n  console.log(latitude)\n\n  // return await axios.get(endpoint, { params }).then(res => {\n  //   return res.data\n  // })\n}\n"]},"metadata":{},"sourceType":"module"}