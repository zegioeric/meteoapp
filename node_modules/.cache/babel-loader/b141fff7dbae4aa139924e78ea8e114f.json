{"ast":null,"code":"var _jsxFileName = \"/home/eric/projects/react/meteoapp/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport AnimationText from '../components/AnimationText';\nimport Forecasts from '../components/Forecasts';\nimport GetLocation from '../components/GetLocation';\nimport { getWeather } from '../api/openweather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const {\n    latitude,\n    longitude,\n    error\n  } = GetLocation();\n  const [weather, setWeather] = useState({});\n  const [weatherPresent, setWeatherPresent] = useState(false);\n\n  const fetchDataWeather = async data => {\n    const resWeather = await getWeather(data);\n    setWeatherPresent(resWeather ? true : false);\n    setWeather(resWeather);\n  };\n\n  if (latitude && longitude && weatherPresent) {\n    fetchDataWeather({\n      lat: latitude,\n      long: longitude\n    });\n  }\n\n  const Component = () => {\n    console.log(weather);\n    return weather ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: weather.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"/qFc0WnFxVFrWN+I6Yl42FG+8yg=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/eric/projects/react/meteoapp/src/pages/HomePage.js"],"names":["React","useEffect","useState","AnimationText","Forecasts","GetLocation","getWeather","HomePage","latitude","longitude","error","weather","setWeather","weatherPresent","setWeatherPresent","fetchDataWeather","data","resWeather","lat","long","Component","console","log","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,UAAT,QAA2B,oBAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,MAA+BL,WAAW,EAAhD;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,KAAD,CAApD;;AAEA,QAAMa,gBAAgB,GAAG,MAAOC,IAAP,IAAgB;AACvC,UAAMC,UAAU,GAAG,MAAMX,UAAU,CAACU,IAAD,CAAnC;AACAF,IAAAA,iBAAiB,CAAEG,UAAD,GAAe,IAAf,GAAsB,KAAvB,CAAjB;AACAL,IAAAA,UAAU,CAACK,UAAD,CAAV;AACD,GAJD;;AAMA,MAAGT,QAAQ,IAAIC,SAAZ,IAAyBI,cAA5B,EAA2C;AACzCE,IAAAA,gBAAgB,CAAC;AACfG,MAAAA,GAAG,EAAEV,QADU;AAEfW,MAAAA,IAAI,EAAEV;AAFS,KAAD,CAAhB;AAID;;AAED,QAAMW,SAAS,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACA,WAAQA,OAAD,gBACL;AAAA,gBAAKA,OAAO,CAACY;AAAb;AAAA;AAAA;AAAA;AAAA,YADK,gBAGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAID,GAND;;AAQA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAjCD;;GAAMhB,Q;;KAAAA,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport AnimationText from '../components/AnimationText'\nimport Forecasts from '../components/Forecasts'\nimport GetLocation from '../components/GetLocation'\nimport { getWeather } from '../api/openweather'\n\nconst HomePage = () => {\n  const {latitude, longitude, error} = GetLocation();\n  const [weather, setWeather] = useState({})\n  const [weatherPresent, setWeatherPresent] = useState(false)\n\n  const fetchDataWeather = async (data) => {\n    const resWeather = await getWeather(data)\n    setWeatherPresent((resWeather) ? true : false)\n    setWeather(resWeather)\n  }\n\n  if(latitude && longitude && weatherPresent){\n    fetchDataWeather({\n      lat: latitude,\n      long: longitude\n    })\n  }\n\n  const Component = () => {\n    console.log(weather)\n    return (weather) ?\n      <h1>{weather.name}</h1>\n      : \n      <p>loading</p> \n  }\n\n  return (\n    <div>\n      <Component />\n      {/* <AnimationText text='Posizione attuale' /> */}\n      {/* <Forecasts /> */}\n    </div>\n  )\n}\nexport default HomePage\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}