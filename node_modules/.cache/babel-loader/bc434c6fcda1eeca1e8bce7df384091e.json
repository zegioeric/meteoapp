{"ast":null,"code":"var _jsxFileName = \"/home/eric/projects/react/meteoapp/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Forecasts from '../components/Forecasts';\nimport { getWeather } from '../api/openweather';\nimport { usePosition } from 'use-position';\nimport Weather from '../components/Weather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  // const {latitude, longitude, error} = usePosition();\n  // const [weather, setWeather] = useState({})\n  // const fetchDataWeather = async (data) => {\n  //   const resWeather = await getWeather(data)\n  //   setWeather(resWeather)\n  // }\n  // //ATTENZIONE\n  // if(latitude && longitude && Object.keys(weather).length === 0){\n  //   fetchDataWeather({\n  //     lat: latitude,\n  //     long: longitude\n  //   })\n  // }\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(function (position) {\n        console.log(\"Latitude is :\", position.coords.latitude);\n        console.log(\"Longitude is :\", position.coords.longitude);\n      });\n    }\n  }, []);\n\n  const WeatherComponent = () => {\n    return Object.keys(weather).length === 0 ? /*#__PURE__*/_jsxDEV(Weather, {\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Forecasts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/eric/projects/react/meteoapp/src/pages/HomePage.js"],"names":["React","useEffect","useState","Forecasts","getWeather","usePosition","Weather","HomePage","navigator","geolocation","watchPosition","position","console","log","coords","latitude","longitude","WeatherComponent","Object","keys","weather","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAN,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAIO,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,aAAtB,CAAoC,UAASC,QAAT,EAAmB;AACrDC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,QAAQ,CAACG,MAAT,CAAgBC,QAA7C;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,QAAQ,CAACG,MAAT,CAAgBE,SAA9C;AACD,OAHD;AAID;AACF,GAPQ,EAOP,EAPO,CAAT;;AASA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,WAAQC,MAAM,CAACC,IAAP,CAAYC,OAAZ,EAAqBC,MAArB,KAAgC,CAAjC,gBACL,QAAC,OAAD;AAAS,MAAA,OAAO,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,YADK,gBAGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAID,GALD;;AAOA,sBACE;AAAA,2BAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAvCD;;GAAMb,Q;;KAAAA,Q;AAwCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Forecasts from '../components/Forecasts'\nimport { getWeather } from '../api/openweather'\nimport { usePosition } from 'use-position'\nimport Weather from '../components/Weather';\n\nconst HomePage = () => {\n  // const {latitude, longitude, error} = usePosition();\n  // const [weather, setWeather] = useState({})\n\n  // const fetchDataWeather = async (data) => {\n  //   const resWeather = await getWeather(data)\n  //   setWeather(resWeather)\n  // }\n\n  // //ATTENZIONE\n  // if(latitude && longitude && Object.keys(weather).length === 0){\n  //   fetchDataWeather({\n  //     lat: latitude,\n  //     long: longitude\n  //   })\n  // }\n\n  useEffect(()=>{\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(function(position) {\n        console.log(\"Latitude is :\", position.coords.latitude);\n        console.log(\"Longitude is :\", position.coords.longitude);\n      });\n    }\n  },[])\n\n  const WeatherComponent = () => {\n    return (Object.keys(weather).length === 0) ?\n      <Weather weather={weather} />\n    : \n      <p>loading</p> \n  }\n\n  return (\n    <div>\n      {/* <WeatherComponent /> */}\n      <Forecasts />\n    </div>\n  )\n}\nexport default HomePage\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}