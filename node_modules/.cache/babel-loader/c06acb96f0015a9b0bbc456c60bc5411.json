{"ast":null,"code":"var _jsxFileName = \"/home/eric/projects/react/meteoapp/src/components/Forecasts.js\",\n    _s = $RefreshSig$();\n\nimport moment from 'moment';\nimport { useState } from 'react';\nimport WeatherIcon from 'react-icons-weather';\nimport Moment from 'react-moment';\nimport '../css/Forecasts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Forecasts = ({\n  forecast\n}) => {\n  _s();\n\n  const [openClass, setOpenClass] = useState();\n\n  const ForecastBoxes = () => {\n    return forecast.list.filter(function (element, index) {\n      return index < 16;\n    }).map(forecastObj => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contain-icon\",\n        children: /*#__PURE__*/_jsxDEV(WeatherIcon, {\n          name: \"owm\",\n          iconId: forecastObj.weather[0].id.toString(),\n          flip: \"horizontal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contain-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(Moment, {\n              date: forecastObj.dt_txt,\n              format: \"DD/MM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" alle \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(Moment, {\n              date: forecastObj.dt_txt,\n              format: \"hh:mm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: forecastObj.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'container-forecasts ' + openClass,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contain\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Previsioni\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), Object.keys(forecast).length > 0 ? /*#__PURE__*/_jsxDEV(ForecastBoxes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hamburger\",\n        onClick: () => setOpenClass(openClass ? '' : 'open'),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hamburger-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hamburger-inner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Forecasts, \"TbGBcmc41vlcTLMqrZ8+AdHNpfM=\");\n\n_c = Forecasts;\nexport default Forecasts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecasts\");","map":{"version":3,"sources":["/home/eric/projects/react/meteoapp/src/components/Forecasts.js"],"names":["moment","useState","WeatherIcon","Moment","Forecasts","forecast","openClass","setOpenClass","ForecastBoxes","list","filter","element","index","map","forecastObj","weather","id","toString","dt_txt","description","Object","keys","length"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,sBAAP;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,EAA1C;;AAEA,QAAMO,aAAa,GAAG,MAAM;AAC1B,WACEH,QAAQ,CAACI,IAAT,CAAcC,MAAd,CAAqB,UAASC,OAAT,EAAkBC,KAAlB,EAAyB;AAC5C,aAAOA,KAAK,GAAG,EAAf;AACD,KAFD,EAEGC,GAFH,CAEQC,WAAW,iBACjB;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC,KAAlB;AAAwB,UAAA,MAAM,EAAEA,WAAW,CAACC,OAAZ,CAAoB,CAApB,EAAuBC,EAAvB,CAA0BC,QAA1B,EAAhC;AAAsE,UAAA,IAAI,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAA,kCACE;AAAA,mCAAM,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAEH,WAAW,CAACI,MAA1B;AAAkC,cAAA,MAAM,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,mCAAM,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAEJ,WAAW,CAACI,MAA1B;AAAkC,cAAA,MAAM,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAA,oBAAIJ,WAAW,CAACC,OAAZ,CAAoB,CAApB,EAAuBI;AAA3B;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CADF;AAmBD,GApBD;;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAE,yBAAuBb,SAAvC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEIc,MAAM,CAACC,IAAP,CAAYhB,QAAZ,EAAsBiB,MAAtB,GAA+B,CAAhC,gBACC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cADD,GAEG,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,OAAO,EAAE,MAAMf,YAAY,CAAED,SAAD,GAAc,EAAd,GAAmB,MAApB,CAAtD;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA3CD;;GAAMF,S;;KAAAA,S;AA6CN,eAAeA,SAAf","sourcesContent":["import moment from 'moment';\nimport { useState } from 'react';\nimport WeatherIcon from 'react-icons-weather';\nimport Moment from 'react-moment';\nimport '../css/Forecasts.css'\n\nconst Forecasts = ({forecast}) => {\n  const [openClass, setOpenClass] = useState()\n\n  const ForecastBoxes = () => {\n    return(\n      forecast.list.filter(function(element, index ){\n        return index < 16;\n      }).map( forecastObj => (\n        <div className='box'>\n          <div className='contain-icon'>\n            <WeatherIcon name=\"owm\" iconId={forecastObj.weather[0].id.toString()} flip=\"horizontal\" />\n          </div>\n          <div className='contain-text'>\n            <p>\n              <span><Moment date={forecastObj.dt_txt} format=\"DD/MM\"/></span>\n              <span> alle </span>\n              <span><Moment date={forecastObj.dt_txt} format=\"hh:mm\" /></span>\n            </p>\n            <p>{forecastObj.weather[0].description}</p>\n          </div>\n        </div>\n      ))\n    )\n  }\n\n  return (\n    <div className={'container-forecasts '+openClass}>\n      <div className='contain'>\n        <h2>Previsioni</h2>\n        {(Object.keys(forecast).length > 0) ?\n          <ForecastBoxes />\n          : ''\n        }\n      </div>\n      <div className='side'>\n        <div className=\"hamburger\" onClick={() => setOpenClass((openClass) ? '' : 'open')}>\n          <div className=\"hamburger-box\">\n            <div className=\"hamburger-inner\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Forecasts;\n"]},"metadata":{},"sourceType":"module"}