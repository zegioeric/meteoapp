{"ast":null,"code":"var _jsxFileName = \"/home/eric/projects/react/meteoapp/src/components/admin/CityForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { Hint } from 'react-autocomplete-hint';\nimport { getJsonCities } from '../../api/cities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CityForm = ({\n  handleSubmit,\n  form,\n  setForm\n}) => {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const [hintData, setHintData] = useState([]);\n  const [text, setText] = useState('');\n\n  const getData = async name => {\n    const resJsonCities = await getJsonCities(name);\n    console.log(resJsonCities);\n    var hintArray = [];\n    resJsonCities.map(a => hintArray.push(a.name));\n    setHintData(hintArray);\n  };\n\n  const validateForm = form => {\n    //validate handle react / react hook / yup / ..\n    for (const [key, value] of Object.entries(form)) {\n      if (!value) {\n        setErrors({\n          [key]: \"required*\"\n        });\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const handleChange = target => {\n    if (target.name == 'name') {\n      setText(target.value);\n\n      if (target.value.length > 5) {\n        getData(target.value);\n      }\n    }\n\n    setForm({ ...form,\n      [target.name]: target.value\n    });\n  };\n\n  const submitForm = e => {\n    e.preventDefault();\n\n    if (validateForm(form)) {\n      handleSubmit(e, { ...form\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      marginTop: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        md: 4,\n        xs: 12,\n        controlId: \"GridName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Nome Citt\\xE0*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Hint, {\n          options: hintData,\n          allowTabFill: true,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-with-hint form-control\",\n            value: text,\n            name: \"name\",\n            onChange: e => handleChange(e.target)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        md: 4,\n        xs: 12,\n        controlId: \"GridLat\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Latitudine*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Latitudine\",\n          name: \"lat\",\n          value: form.lat,\n          disabled: true // onChange={e => handleChange(e.target)}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.lat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        md: 4,\n        xs: 12,\n        controlId: \"GridLon\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Longitudine*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Longitudine\",\n          name: \"lon\",\n          value: form.lon,\n          disabled: true // onChange={e => handleChange(e.target)}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.lon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"button\",\n      onClick: submitForm,\n      children: \"Salva\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CityForm, \"4smvzGNZFwW76kl8tu6H5HMhKig=\");\n\n_c = CityForm;\nexport default CityForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityForm\");","map":{"version":3,"sources":["/home/eric/projects/react/meteoapp/src/components/admin/CityForm.js"],"names":["React","useEffect","useState","Form","Button","Col","Hint","getJsonCities","CityForm","handleSubmit","form","setForm","errors","setErrors","hintData","setHintData","text","setText","getData","name","resJsonCities","console","log","hintArray","map","a","push","validateForm","key","value","Object","entries","handleChange","target","length","submitForm","e","preventDefault","marginTop","lat","lon"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Form, Button, Col} from 'react-bootstrap';\nimport { Hint } from 'react-autocomplete-hint';\nimport { getJsonCities } from '../../api/cities'\n\nconst CityForm = ( { handleSubmit, form, setForm } ) => {\n  const [errors, setErrors] = useState({})\n  const [hintData, setHintData] = useState([])\n  const [text, setText] = useState('')\n  \n  const getData = async (name) => {\n    const resJsonCities = await getJsonCities(name)\n    console.log(resJsonCities)\n    var hintArray = []\n    resJsonCities.map(a => hintArray.push(a.name))\n    setHintData(hintArray)\n  }\n\n  const validateForm = (form) => {\n    //validate handle react / react hook / yup / ..\n    for (const [key, value] of Object.entries(form)) {\n      if(!value){\n        setErrors({ [key]: \"required*\"})\n        return false\n      } \n    }\n    return true\n  }\n\n  const handleChange = (target) => {\n    if(target.name == 'name'){\n      setText(target.value)\n      if(target.value.length > 5){\n        getData(target.value)\n      }\n    }\n    setForm({\n      ...form,\n      [target.name]: target.value\n    })\n  }\n\n  const submitForm = e => {\n    e.preventDefault();\n    if(validateForm(form)){\n      handleSubmit(e, {...form})\n    }\n  }\n\n  return(\n    <Form style={{marginTop: '50px'}}>\n      <Form.Row>\n        <Form.Group as={Col} md={4} xs={12} controlId=\"GridName\">\n          <Form.Label>Nome Città*</Form.Label>\n          <Hint options={hintData} allowTabFill>\n            <input className='input-with-hint form-control'\n              value={text}\n              name=\"name\"\n              onChange={e => handleChange(e.target)}   \n              />\n          </Hint>\n          \n          <p>{errors.name}</p>\n        </Form.Group>\n        <Form.Group as={Col} md={4} xs={12} controlId=\"GridLat\">\n          <Form.Label>Latitudine*</Form.Label>\n          <Form.Control placeholder=\"Latitudine\" name=\"lat\" value={form.lat} \n          disabled\n          // onChange={e => handleChange(e.target)}\n           />\n          <p>{errors.lat}</p>\n        </Form.Group>\n        <Form.Group as={Col} md={4} xs={12} controlId=\"GridLon\">\n          <Form.Label>Longitudine*</Form.Label>\n          <Form.Control placeholder=\"Longitudine\" name=\"lon\" value={form.lon} \n          disabled\n          // onChange={e => handleChange(e.target)}\n           />\n          <p>{errors.lon}</p>\n        </Form.Group>\n      </Form.Row>\n      <Button variant=\"primary\" type=\"button\" onClick={submitForm}>\n        Salva\n      </Button>\n    </Form>  \n    )\n\n}\n\nexport default CityForm\n"]},"metadata":{},"sourceType":"module"}