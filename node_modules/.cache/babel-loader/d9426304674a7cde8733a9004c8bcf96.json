{"ast":null,"code":"var _jsxFileName = \"/home/eric/projects/react/meteoapp/src/pages/HomePage.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport AnimationText from '../components/AnimationText';\nimport Forecasts from '../components/Forecasts'; // import GetLocation from '../components/GetLocation'\n\nimport { getForecast } from '../api/openweather';\nimport { usePosition } from 'use-position';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // const {latitude, longitude, error} = GetLocation();\n  const watch = true;\n\n  const fetchDataForecast = async data => {\n    _s();\n\n    console.log(usePosition(watch)); // const resForecast = await getForecast(data)\n    // console.log(resForecast)\n  };\n\n  _s(fetchDataForecast, \"Wligr3MS2cnlkOJd2TJeUspxYxE=\", false, function () {\n    return [usePosition];\n  });\n\n  useEffect(() => {\n    fetchDataForecast({\n      lat: '45.409673999999995',\n      long: '10.855770699999999'\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Forecasts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(HomePage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/eric/projects/react/meteoapp/src/pages/HomePage.js"],"names":["React","useEffect","AnimationText","Forecasts","getForecast","usePosition","HomePage","watch","fetchDataForecast","data","console","log","lat","long"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB,C,CACA;;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,WAAT,QAA4B,cAA5B;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAAA;;AACrB;AACA,QAAMC,KAAK,GAAG,IAAd;;AAGA,QAAMC,iBAAiB,GAAG,MAAOC,IAAP,IAAgB;AAAA;;AAExCC,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAW,CAACE,KAAD,CAAvB,EAFwC,CAKxC;AACA;AACD,GAPD;;AALqB,KAKfC,iBALe;AAAA,YAOPH,WAPO;AAAA;;AAcrBJ,EAAAA,SAAS,CAAE,MAAM;AACfO,IAAAA,iBAAiB,CAAC;AAChBI,MAAAA,GAAG,EAAE,oBADW;AAEhBC,MAAAA,IAAI,EAAE;AAFU,KAAD,CAAjB;AAID,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAA,2BAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA5BD;;IAAMP,Q;;KAAAA,Q;AA6BN,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport AnimationText from '../components/AnimationText'\nimport Forecasts from '../components/Forecasts'\n// import GetLocation from '../components/GetLocation'\nimport { getForecast } from '../api/openweather'\nimport { usePosition } from 'use-position';\n\n\nconst HomePage = () => {\n  // const {latitude, longitude, error} = GetLocation();\n  const watch = true;\n  \n  \n  const fetchDataForecast = async (data) => {\n\n    console.log(usePosition(watch))\n\n\n    // const resForecast = await getForecast(data)\n    // console.log(resForecast)\n  }\n\n  useEffect( () => {\n    fetchDataForecast({\n      lat: '45.409673999999995',\n      long: '10.855770699999999'\n    })\n  }, [])\n\n  return (\n    <div>\n      \n      {/* <AnimationText text='Posizione attuale' /> */}\n      <Forecasts />\n    </div>\n  )\n}\nexport default HomePage\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}