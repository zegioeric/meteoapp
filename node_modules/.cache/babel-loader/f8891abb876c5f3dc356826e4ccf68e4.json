{"ast":null,"code":"var _jsxFileName = \"/home/eric/projects/react/meteoapp/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport AnimationText from '../components/AnimationText';\nimport Forecasts from '../components/Forecasts'; // import GetLocation from '../components/GetLocation'\n\nimport { getForecast } from '../api/openweather';\nimport { usePosition } from 'use-position';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const {\n    latitude,\n    longitude,\n    error\n  } = usePosition(true);\n\n  const fetchDataForecast = async data => {\n    console.log(latitude); // const resForecast = await getForecast(data)\n    // console.log(resForecast)\n  };\n\n  useEffect(() => {\n    fetchDataForecast({\n      lat: '45.409673999999995',\n      long: '10.855770699999999'\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: latitude\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Forecasts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"1egOXCBi2U43JA9TtLSau7VS6gc=\", false, function () {\n  return [usePosition];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/eric/projects/react/meteoapp/src/pages/HomePage.js"],"names":["React","useEffect","AnimationText","Forecasts","getForecast","usePosition","HomePage","latitude","longitude","error","fetchDataForecast","data","console","log","lat","long"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB,C,CACA;;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,WAAT,QAA4B,cAA5B;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,MAA+BJ,WAAW,CAAC,IAAD,CAAhD;;AAGA,QAAMK,iBAAiB,GAAG,MAAOC,IAAP,IAAgB;AAExCC,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ,EAFwC,CAKxC;AACA;AACD,GAPD;;AASAN,EAAAA,SAAS,CAAE,MAAM;AACfS,IAAAA,iBAAiB,CAAC;AAChBI,MAAAA,GAAG,EAAE,oBADW;AAEhBC,MAAAA,IAAI,EAAE;AAFU,KAAD,CAAjB;AAID,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAA,4BACE;AAAA,gBAAKR;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA3BD;;GAAMD,Q;UACiCD,W;;;KADjCC,Q;AA4BN,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport AnimationText from '../components/AnimationText'\nimport Forecasts from '../components/Forecasts'\n// import GetLocation from '../components/GetLocation'\nimport { getForecast } from '../api/openweather'\nimport { usePosition } from 'use-position';\n\n\nconst HomePage = () => {\n  const {latitude, longitude, error} = usePosition(true);\n  \n  \n  const fetchDataForecast = async (data) => {\n\n    console.log(latitude)\n\n\n    // const resForecast = await getForecast(data)\n    // console.log(resForecast)\n  }\n\n  useEffect( () => {\n    fetchDataForecast({\n      lat: '45.409673999999995',\n      long: '10.855770699999999'\n    })\n  }, [])\n\n  return (\n    <div>\n      <h1>{latitude}</h1>\n      {/* <AnimationText text='Posizione attuale' /> */}\n      <Forecasts />\n    </div>\n  )\n}\nexport default HomePage\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}